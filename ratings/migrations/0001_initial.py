# Generated by Django 5.1.7 on 2025-04-04 00:42

import ckeditor_uploader.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CriticReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewer_name', models.CharField(help_text='e.g., IGN, GameSpot, Metacritic', max_length=100, verbose_name='Reviewer Name')),
                ('score', models.CharField(blank=True, help_text='e.g., 9/10, 85/100, Recommended', max_length=20, verbose_name='Score')),
                ('review_url', models.URLField(help_text='Direct link to the review', max_length=300, unique=True, verbose_name='Review URL')),
                ('summary', models.TextField(blank=True, help_text='Optional short quote or summary from the review', verbose_name='Summary Quote')),
                ('summary_en', models.TextField(blank=True, help_text='Optional short quote or summary from the review', null=True, verbose_name='Summary Quote')),
                ('summary_ar', models.TextField(blank=True, help_text='Optional short quote or summary from the review', null=True, verbose_name='Summary Quote')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Date Added')),
            ],
            options={
                'verbose_name': 'Critic Review',
                'verbose_name_plural': 'Critic Reviews',
                'ordering': ['reviewer_name'],
            },
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=50, unique=True, verbose_name='Symbol (Icon Name)')),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
                ('description_en', models.CharField(max_length=100, null=True, verbose_name='Description')),
                ('description_ar', models.CharField(max_length=100, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Content Flag',
                'verbose_name_plural': 'Content Flags',
            },
        ),
        migrations.CreateModel(
            name='MethodologyPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Page Title')),
                ('title_en', models.CharField(max_length=200, null=True, verbose_name='Page Title')),
                ('title_ar', models.CharField(max_length=200, null=True, verbose_name='Page Title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Page Content')),
                ('content_en', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Page Content')),
                ('content_ar', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Page Content')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
            ],
            options={
                'verbose_name': 'Methodology Page',
                'verbose_name_plural': 'Methodology Page',
            },
        ),
        migrations.CreateModel(
            name='RatingTier',
            fields=[
                ('tier_code', models.CharField(choices=[('HAL', 'Halal'), ('MSH', 'Mashbouh'), ('HRM', 'Haram'), ('KFR', 'Kufr')], max_length=3, primary_key=True, serialize=False, unique=True)),
                ('display_name', models.CharField(max_length=50, unique=True, verbose_name='Display Name')),
                ('display_name_en', models.CharField(max_length=50, null=True, unique=True, verbose_name='Display Name')),
                ('display_name_ar', models.CharField(max_length=50, null=True, unique=True, verbose_name='Display Name')),
                ('icon_name', models.CharField(default='help', help_text='Material Symbols icon name (e.g., check_circle, warning, cancel, gpp_bad). See fonts.google.com/icons', max_length=50, verbose_name='Icon Name')),
                ('color_hex', models.CharField(help_text='Hex color code, e.g., #00FF00', max_length=7, verbose_name='Color Hex')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('description_ar', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order to display tiers (0=first)', verbose_name='Display Order')),
            ],
            options={
                'verbose_name': 'Rating Tier',
                'verbose_name_plural': 'Rating Tiers',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('title_en', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('title_ar', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, help_text='Unique URL-friendly name. Leave blank to auto-generate from title.', max_length=220, unique=True)),
                ('cover_image_url', models.URLField(blank=True, help_text="URL for the game's cover image.", max_length=300, null=True, verbose_name='Cover Image URL')),
                ('developer', models.CharField(blank=True, max_length=100, verbose_name='Developer')),
                ('publisher', models.CharField(blank=True, max_length=100, verbose_name='Publisher')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Release Date')),
                ('summary', models.TextField(blank=True, help_text='Short description shown in lists.', verbose_name='Summary')),
                ('summary_en', models.TextField(blank=True, help_text='Short description shown in lists.', null=True, verbose_name='Summary')),
                ('summary_ar', models.TextField(blank=True, help_text='Short description shown in lists.', null=True, verbose_name='Summary')),
                ('developer_slug', models.SlugField(blank=True, help_text='Auto-generated slug for developer filtering.', max_length=110)),
                ('publisher_slug', models.SlugField(blank=True, help_text='Auto-generated slug for publisher filtering.', max_length=110)),
                ('available_pc', models.BooleanField(default=False, verbose_name='Available on PC')),
                ('available_ps5', models.BooleanField(default=False, verbose_name='Available on PS5')),
                ('available_ps4', models.BooleanField(default=False, verbose_name='Available on PS4')),
                ('available_xbox_series', models.BooleanField(default=False, verbose_name='Available on Xbox Series X|S')),
                ('available_xbox_one', models.BooleanField(default=False, verbose_name='Available on Xbox One')),
                ('available_switch', models.BooleanField(default=False, verbose_name='Available on Nintendo Switch')),
                ('available_android', models.BooleanField(default=False, verbose_name='Available on Android')),
                ('available_ios', models.BooleanField(default=False, verbose_name='Available on iOS')),
                ('available_quest', models.BooleanField(default=False, verbose_name='Available on Meta Quest')),
                ('requires_adjustment', models.BooleanField(default=False, help_text='Check if this game needs user adjustments (settings, mods) to meet its assigned Halal/Mubah rating.', verbose_name='Requires Adjustment')),
                ('rationale', models.TextField(blank=True, help_text='General rationale summary (optional).', verbose_name='General Rationale')),
                ('rationale_en', models.TextField(blank=True, help_text='General rationale summary (optional).', null=True, verbose_name='General Rationale')),
                ('rationale_ar', models.TextField(blank=True, help_text='General rationale summary (optional).', null=True, verbose_name='General Rationale')),
                ('adjustment_guide', models.TextField(blank=True, help_text='Instructions or links on how to adjust settings/mods for Halal/Mashbouh games.', verbose_name='Adjustment Guide')),
                ('adjustment_guide_en', models.TextField(blank=True, help_text='Instructions or links on how to adjust settings/mods for Halal/Mashbouh games.', null=True, verbose_name='Adjustment Guide')),
                ('adjustment_guide_ar', models.TextField(blank=True, help_text='Instructions or links on how to adjust settings/mods for Halal/Mashbouh games.', null=True, verbose_name='Adjustment Guide')),
                ('immorality_severity', models.CharField(choices=[('N', 'None'), ('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('P', 'Prohibited')], default='N', max_length=1, verbose_name='Immorality Severity')),
                ('immorality_details', models.TextField(blank=True, help_text="Examples of 'Awrah, suggestive themes, promotion of impermissible relationships, bad language/conduct.", verbose_name='Immorality Details')),
                ('immorality_reason', models.TextField(blank=True, help_text='Reasoning or reference for the Immorality severity rating.', verbose_name='Immorality Reason')),
                ('substances_gambling_severity', models.CharField(choices=[('N', 'None'), ('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('P', 'Prohibited')], default='N', max_length=1, verbose_name='Substances/Gambling Severity')),
                ('substances_gambling_details', models.TextField(blank=True, help_text='Examples of substance use/promotion, gambling mechanics.', verbose_name='Substances/Gambling Details')),
                ('substances_gambling_reason', models.TextField(blank=True, help_text='Reasoning or reference for the Substances/Gambling severity rating.', verbose_name='Substances/Gambling Reason')),
                ('audio_music_severity', models.CharField(choices=[('N', 'None'), ('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('P', 'Prohibited')], default='N', max_length=1, verbose_name='Audio/Music Severity')),
                ('audio_music_details', models.TextField(blank=True, help_text='Details about background music, lyrics, ability to mute.', verbose_name='Audio/Music Details')),
                ('audio_music_reason', models.TextField(blank=True, help_text='Reasoning or reference for the Audio/Music severity rating.', verbose_name='Audio/Music Reason')),
                ('aqidah_severity', models.CharField(choices=[('N', 'None'), ('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('P', 'Prohibited')], default='N', max_length=1, verbose_name='Aqidah Severity')),
                ('aqidah_details', models.TextField(blank=True, help_text='Specific examples related to Aqidah concerns (magic, deities, ideologies etc).', verbose_name='Aqidah Details')),
                ('aqidah_details_en', models.TextField(blank=True, help_text='Specific examples related to Aqidah concerns (magic, deities, ideologies etc).', null=True, verbose_name='Aqidah Details')),
                ('aqidah_details_ar', models.TextField(blank=True, help_text='Specific examples related to Aqidah concerns (magic, deities, ideologies etc).', null=True, verbose_name='Aqidah Details')),
                ('aqidah_reason', models.TextField(blank=True, help_text='Reasoning or reference for the Aqidah severity rating.', verbose_name='Aqidah Reason')),
                ('aqidah_reason_en', models.TextField(blank=True, help_text='Reasoning or reference for the Aqidah severity rating.', null=True, verbose_name='Aqidah Reason')),
                ('aqidah_reason_ar', models.TextField(blank=True, help_text='Reasoning or reference for the Aqidah severity rating.', null=True, verbose_name='Aqidah Reason')),
                ('haram_depictions_severity', models.CharField(choices=[('N', 'None'), ('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('P', 'Prohibited')], default='N', max_length=1, verbose_name='Haram Depictions Severity')),
                ('haram_depictions_details', models.TextField(blank=True, help_text="Examples: Required exposure to 'Awrah, Haram music, gambling mechanics, etc.", verbose_name='Haram Depictions Details')),
                ('haram_depictions_details_en', models.TextField(blank=True, help_text="Examples: Required exposure to 'Awrah, Haram music, gambling mechanics, etc.", null=True, verbose_name='Haram Depictions Details')),
                ('haram_depictions_details_ar', models.TextField(blank=True, help_text="Examples: Required exposure to 'Awrah, Haram music, gambling mechanics, etc.", null=True, verbose_name='Haram Depictions Details')),
                ('haram_depictions_reason', models.TextField(blank=True, help_text='Reasoning for the Depictions severity rating.', verbose_name='Haram Depictions Reason')),
                ('haram_depictions_reason_en', models.TextField(blank=True, help_text='Reasoning for the Depictions severity rating.', null=True, verbose_name='Haram Depictions Reason')),
                ('haram_depictions_reason_ar', models.TextField(blank=True, help_text='Reasoning for the Depictions severity rating.', null=True, verbose_name='Haram Depictions Reason')),
                ('simulation_haram_severity', models.CharField(choices=[('N', 'None'), ('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('P', 'Prohibited')], default='N', max_length=1, verbose_name='Simulation Haram Severity')),
                ('simulation_haram_details', models.TextField(blank=True, help_text='Examples: Simulating drinking Khamr, simulated Zina, performing simulated Shirk acts.', verbose_name='Simulation Haram Details')),
                ('simulation_haram_details_en', models.TextField(blank=True, help_text='Examples: Simulating drinking Khamr, simulated Zina, performing simulated Shirk acts.', null=True, verbose_name='Simulation Haram Details')),
                ('simulation_haram_details_ar', models.TextField(blank=True, help_text='Examples: Simulating drinking Khamr, simulated Zina, performing simulated Shirk acts.', null=True, verbose_name='Simulation Haram Details')),
                ('simulation_haram_reason', models.TextField(blank=True, help_text='Reasoning for the Simulation Haram severity rating.', verbose_name='Simulation Haram Reason')),
                ('simulation_haram_reason_en', models.TextField(blank=True, help_text='Reasoning for the Simulation Haram severity rating.', null=True, verbose_name='Simulation Haram Reason')),
                ('simulation_haram_reason_ar', models.TextField(blank=True, help_text='Reasoning for the Simulation Haram severity rating.', null=True, verbose_name='Simulation Haram Reason')),
                ('normalization_haram_severity', models.CharField(choices=[('N', 'None'), ('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('P', 'Prohibited')], default='N', max_length=1, verbose_name='Normalization Haram Severity')),
                ('normalization_haram_details', models.TextField(blank=True, help_text='Examples: Positive portrayal of impermissible relationships, casual depiction of sin, trivialization.', verbose_name='Normalization Haram Details')),
                ('normalization_haram_details_en', models.TextField(blank=True, help_text='Examples: Positive portrayal of impermissible relationships, casual depiction of sin, trivialization.', null=True, verbose_name='Normalization Haram Details')),
                ('normalization_haram_details_ar', models.TextField(blank=True, help_text='Examples: Positive portrayal of impermissible relationships, casual depiction of sin, trivialization.', null=True, verbose_name='Normalization Haram Details')),
                ('normalization_haram_reason', models.TextField(blank=True, help_text='Reasoning for the Normalization Haram severity rating.', verbose_name='Normalization Haram Reason')),
                ('normalization_haram_reason_en', models.TextField(blank=True, help_text='Reasoning for the Normalization Haram severity rating.', null=True, verbose_name='Normalization Haram Reason')),
                ('normalization_haram_reason_ar', models.TextField(blank=True, help_text='Reasoning for the Normalization Haram severity rating.', null=True, verbose_name='Normalization Haram Reason')),
                ('violence_severity', models.CharField(choices=[('N', 'None'), ('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('P', 'Prohibited')], default='N', max_length=1, verbose_name='Violence Severity')),
                ('violence_details', models.TextField(blank=True, help_text='Specific examples of violence, gore, context, justification.', verbose_name='Violence Details')),
                ('violence_details_en', models.TextField(blank=True, help_text='Specific examples of violence, gore, context, justification.', null=True, verbose_name='Violence Details')),
                ('violence_details_ar', models.TextField(blank=True, help_text='Specific examples of violence, gore, context, justification.', null=True, verbose_name='Violence Details')),
                ('violence_reason', models.TextField(blank=True, help_text='Reasoning for the Violence severity rating.', verbose_name='Violence Reason')),
                ('violence_reason_en', models.TextField(blank=True, help_text='Reasoning for the Violence severity rating.', null=True, verbose_name='Violence Reason')),
                ('violence_reason_ar', models.TextField(blank=True, help_text='Reasoning for the Violence severity rating.', null=True, verbose_name='Violence Reason')),
                ('time_addiction_severity', models.CharField(choices=[('N', 'None'), ('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('P', 'Prohibited')], default='N', max_length=1, verbose_name='Time/Addiction Severity')),
                ('time_addiction_details', models.TextField(blank=True, help_text='Notes on addictive mechanics, time investment required, potential for neglecting duties.', verbose_name='Time/Addiction Details')),
                ('time_addiction_details_en', models.TextField(blank=True, help_text='Notes on addictive mechanics, time investment required, potential for neglecting duties.', null=True, verbose_name='Time/Addiction Details')),
                ('time_addiction_details_ar', models.TextField(blank=True, help_text='Notes on addictive mechanics, time investment required, potential for neglecting duties.', null=True, verbose_name='Time/Addiction Details')),
                ('time_addiction_reason', models.TextField(blank=True, help_text='Reasoning for the Time/Addiction severity rating.', verbose_name='Time/Addiction Reason')),
                ('time_addiction_reason_en', models.TextField(blank=True, help_text='Reasoning for the Time/Addiction severity rating.', null=True, verbose_name='Time/Addiction Reason')),
                ('time_addiction_reason_ar', models.TextField(blank=True, help_text='Reasoning for the Time/Addiction severity rating.', null=True, verbose_name='Time/Addiction Reason')),
                ('online_conduct_severity', models.CharField(choices=[('N', 'None'), ('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('P', 'Prohibited')], default='N', max_length=1, verbose_name='Online Conduct Severity')),
                ('online_conduct_details', models.TextField(blank=True, help_text='Risks related to online chat, community toxicity, moderation.', verbose_name='Online Conduct Details')),
                ('online_conduct_details_en', models.TextField(blank=True, help_text='Risks related to online chat, community toxicity, moderation.', null=True, verbose_name='Online Conduct Details')),
                ('online_conduct_details_ar', models.TextField(blank=True, help_text='Risks related to online chat, community toxicity, moderation.', null=True, verbose_name='Online Conduct Details')),
                ('online_conduct_reason', models.TextField(blank=True, help_text='Reasoning for the Online Conduct severity rating.', verbose_name='Online Conduct Reason')),
                ('online_conduct_reason_en', models.TextField(blank=True, help_text='Reasoning for the Online Conduct severity rating.', null=True, verbose_name='Online Conduct Reason')),
                ('online_conduct_reason_ar', models.TextField(blank=True, help_text='Reasoning for the Online Conduct severity rating.', null=True, verbose_name='Online Conduct Reason')),
                ('has_spoilers_in_details', models.BooleanField(default=False, help_text="Check this to enable the 'Show/Hide Details' toggle for categories containing potential spoilers.", verbose_name='Has Spoilers in Details')),
                ('steam_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Steam Store URL')),
                ('epic_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Epic Games Store URL')),
                ('gog_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='GOG Store URL')),
                ('other_store_link', models.URLField(blank=True, max_length=300, null=True, verbose_name='Other Store URL')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Date Added')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('adjustable_flags', models.ManyToManyField(blank=True, help_text='Select flags corresponding to content that CAN be adjusted/avoided.', related_name='games_needing_adjustment', to='ratings.flag', verbose_name='Adjustable Content Flags')),
                ('critic_reviews', models.ManyToManyField(blank=True, help_text='Select critic reviews relevant to this game.', related_name='games', to='ratings.criticreview', verbose_name='Critic Reviews')),
                ('flags', models.ManyToManyField(blank=True, help_text='Quick visual indicators for potential content types.', related_name='games', to='ratings.flag', verbose_name='Content Flags')),
                ('rating_tier', models.ForeignKey(help_text='Overall MGC Rating based on detailed assessment.', on_delete=django.db.models.deletion.PROTECT, related_name='games', to='ratings.ratingtier', verbose_name='Rating Tier')),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
                'ordering': ['-date_added'],
            },
        ),
        migrations.CreateModel(
            name='GameComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Comment')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Posted')),
                ('approved', models.BooleanField(default=True, verbose_name='Approved')),
                ('moderator_attention_needed', models.BooleanField(default=False, verbose_name='Needs Attention')),
                ('flagged_by', models.ManyToManyField(blank=True, related_name='flagged_comments', to=settings.AUTH_USER_MODEL, verbose_name='Flagged By')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='ratings.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Game Comment',
                'verbose_name_plural': 'Game Comments',
                'ordering': ['created_date'],
            },
        ),
    ]
